{"ast":null,"code":"var _jsxFileName = \"/Library/WebServer/Documents/MachineLearning/trading/PKT-CASH/LUX/ODApp/packages/react-app/src/App.js\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { ethers } from \"ethers\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport MetaMaskOnboarding from '@metamask/onboarding';\nimport { Button, Footer, Text, Box, Grommet, ResponsiveContext } from \"grommet\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Teleport from \"./components/Teleport\";\nimport Collapsible from \"./components/Collapsible\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport GET_TRANSFERS from \"./graphql/subgraph\";\nimport logoFooter from \"./img/odapp-logo-footer.svg\";\nimport { ButtonFooter, ImageFooter, customBreakpoints } from \"./components/\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { Connect } from 'grommet-icons';\nvar clr = '#FBA300';\n/*\n\nconst forwarderOrigin = 'http://localhost:3000';\nconst { ethereum } = window;\n\nconst initialize = () => {\n  //Basic Actions Section\n  const onboardButton = document.getElementById('connectButton');\n  //const getAccountsButton = document.getElementById('getAccounts');\n  //const getAccountsResult = document.getElementById('getAccountsResult');\n  console.log('initializing');\n  //Created check function to see if the MetaMask extension is installed\n  const isMetaMaskInstalled = () => {\n    //Have to check the ethereum binding on the window object to see if it's installed\n    //const { ethereum } = window;\n    return Boolean(ethereum && ethereum.isMetaMask);\n  };\n\n  //We create a new MetaMask onboarding object to use in our app\n  const onboarding = new MetaMaskOnboarding({ forwarderOrigin });\n\n  //This will start the onboarding proccess\n  const onClickInstall = () => {\n    onboardButton.innerText = 'Onboarding in progress';\n    onboardButton.disabled = true;\n    //On this object we have startOnboarding which will start the onboarding process for our end user\n    onboarding.startOnboarding();\n  };\n\n  const onClickConnect = async () => {\n    try {\n      console.log('connecting');\n      //const { ethereum } = window;\n\n\n\n      // Will open the MetaMask UI\n      // You should disable this button while the request is pending!\n      const newAccounts = await ethereum.request({ method: 'eth_requestAccounts' });\n      console.log('request', newAccounts);\n      onboardButton.innerText = 'Disconnect Wallet';\n\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n  const MetaMaskClientCheck = () => {\n    //Now we check to see if Metmask is installed\n    if (!isMetaMaskInstalled()) {\n      //If it isn't installed we ask the user to click to install it\n      onboardButton.innerText = 'Click here to install MetaMask!';\n      //When the button is clicked we call th is function\n      onboardButton.onclick = onClickInstall;\n      //The button is now disabled\n      onboardButton.disabled = false;\n    } else {\n      //If MetaMask is installed we ask the user to connect to their wallet\n      onboardButton.innerText = 'Connect Wallet';\n      //When the button is clicked we call this function to connect the users MetaMask Wallet\n      onboardButton.onclick = onClickConnect;\n      //The button is now disabled\n      onboardButton.disabled = false;\n    }\n  };\n\n\n\n  MetaMaskClientCheck();\n};\n\nwindow.addEventListener('DOMContentLoaded', initialize);\n\n*/\n\n/*async function checkMetamask(){\n\n  provider = await detectEthereumProvider();\n  if (provider) {\n    console.log('Metamask successfully detected!');\n    //const provider = new WalletConnectProvider({\n      //  infuraId: \"27e484dcd9e3efcfd25a83a78777cdf1\",\n      //});\n    return web3Provider = new ethers.providers.Web3Provider(window.ethereum); //provider\n\n  }\n  else{\n    console.log('Please install metamask');\n    alert('Please install metamask');\n    return false;\n  }\n\n}\n\n\nasync function connectMetamask(){\n  try {\n    // Will open the MetaMask UI\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    if (accounts.length > 0 ){\n      const account = accounts[0];\n      console.log('Account Connected:', account);\n      provider = await checkMetamask();\n      console.log('Provider', provider);\n      return provider;\n\n    }\n    else {\n      console.log('Connect metamask');\n    }\n\n\n  } catch (error) {\n    console.error(error);\n    alert(error);\n    //return provider;\n  }\n}*/\n\nvar web3Provider, provider;\nconst forwarderOrigin = 'http://localhost:3000';\nconst onboardButton = document.getElementById('connectButton');\nlet connected = false;\nlet installed = false;\n\nasync function isMetaMaskConnected() {\n  const {\n    ethereum\n  } = window;\n  const accounts = await ethereum.request({\n    method: 'eth_accounts'\n  });\n  return accounts && accounts.length > 0;\n}\n\nfunction isMetaMaskInstalled() {\n  return Boolean(window.ethereum && window.ethereum.isMetaMask);\n}\n\nasync function initialise() {\n  connected = await isMetaMaskConnected();\n  installed = isMetaMaskInstalled();\n}\n\ninitialise();\nwindow.ethereum.on('accountsChanged', async () => {\n  initialise();\n});\n\nconst onClickConnect = async () => {\n  const {\n    ethereum\n  } = window;\n\n  try {\n    // Will open the MetaMask UI\n    console.log(\"Try to connect here\");\n    await ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n;\n\nfunction WalletButton(_ref) {\n  let {\n    provider,\n    loadWeb3Modal,\n    logoutOfWeb3Modal,\n    clr\n  } = _ref;\n  const onboarding = new MetaMaskOnboarding({\n    forwarderOrigin\n  });\n  var initialLabel = !provider ? \"Connect Wallet\" : \"Disconnect Wallet\";\n  const [label, setLabel] = useState(initialLabel);\n  return /*#__PURE__*/React.createElement(Button, {\n    id: \"connectButton\",\n    primary: true,\n    size: \"large\",\n    align: \"center\",\n    color: \"#FBA300\",\n    className: \"mainConnect\",\n    label: !connected ? \"Connect Wallet2\" : \"Disconnect Wallet\",\n    onClick: async () => {\n      onClickConnect();\n\n      if (connected) {//onboardButton.innerText(\"Disconnect Wallet\");\n      }\n\n      if (typeof window.ethereum === 'undefined') {\n        console.log('stuff', typeof window.ethereum);\n        onboarding.startOnboarding();\n        alert('Please install metamask to use this site');\n        return;\n      }\n      /*if (!provider) {\n        setLabel(\"Connect Wallet\");\n        loadWeb3Modal();\n      } else {\n        setLabel(\"Disconnect Wallet\");\n        logoutOfWeb3Modal();\n      }*/\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction App() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TRANSFERS);\n  const [provider, loadWeb3Modal, logoutOfWeb3Modal] = useWeb3Modal();\n  const items = [{\n    label: 'Teleport',\n    href: '/'\n  }];\n  React.useEffect(() => {\n    if (!loading && !error && data && data.transfers) {\n      console.log({\n        transfers: data.transfers\n      });\n    }\n  }, [loading, error, data]); //connectMetamask();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Collapsible, {\n    btn: WalletButton({\n      provider,\n      loadWeb3Modal,\n      logoutOfWeb3Modal,\n      clr\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Teleport, {\n    btn: WalletButton({\n      provider,\n      loadWeb3Modal,\n      logoutOfWeb3Modal,\n      clr\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","useQuery","ethers","detectEthereumProvider","MetaMaskOnboarding","Button","Footer","Text","Box","Grommet","ResponsiveContext","BrowserRouter","Router","Route","Switch","Teleport","Collapsible","useWeb3Modal","GET_TRANSFERS","ButtonFooter","ImageFooter","customBreakpoints","WalletConnectProvider","Connect","clr","web3Provider","provider","forwarderOrigin","onboardButton","document","getElementById","connected","installed","isMetaMaskConnected","ethereum","window","accounts","request","method","length","isMetaMaskInstalled","Boolean","isMetaMask","initialise","on","onClickConnect","console","log","error","WalletButton","loadWeb3Modal","logoutOfWeb3Modal","onboarding","initialLabel","label","setLabel","startOnboarding","alert","App","loading","data","items","href","useEffect","transfers"],"sources":["/Library/WebServer/Documents/MachineLearning/trading/PKT-CASH/LUX/ODApp/packages/react-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { ethers } from \"ethers\";\nimport detectEthereumProvider from '@metamask/detect-provider'\nimport MetaMaskOnboarding from '@metamask/onboarding'\nimport { Button, Footer, Text, Box, Grommet, ResponsiveContext } from \"grommet\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Teleport from \"./components/Teleport\";\nimport Collapsible from \"./components/Collapsible\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport GET_TRANSFERS from \"./graphql/subgraph\";\nimport logoFooter from \"./img/odapp-logo-footer.svg\";\nimport { ButtonFooter, ImageFooter, customBreakpoints } from \"./components/\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nimport {\n  Connect\n} from 'grommet-icons';\n\nvar clr = '#FBA300';\n\n\n\n\n\n\n/*\n\nconst forwarderOrigin = 'http://localhost:3000';\nconst { ethereum } = window;\n\nconst initialize = () => {\n  //Basic Actions Section\n  const onboardButton = document.getElementById('connectButton');\n  //const getAccountsButton = document.getElementById('getAccounts');\n  //const getAccountsResult = document.getElementById('getAccountsResult');\n  console.log('initializing');\n  //Created check function to see if the MetaMask extension is installed\n  const isMetaMaskInstalled = () => {\n    //Have to check the ethereum binding on the window object to see if it's installed\n    //const { ethereum } = window;\n    return Boolean(ethereum && ethereum.isMetaMask);\n  };\n\n  //We create a new MetaMask onboarding object to use in our app\n  const onboarding = new MetaMaskOnboarding({ forwarderOrigin });\n\n  //This will start the onboarding proccess\n  const onClickInstall = () => {\n    onboardButton.innerText = 'Onboarding in progress';\n    onboardButton.disabled = true;\n    //On this object we have startOnboarding which will start the onboarding process for our end user\n    onboarding.startOnboarding();\n  };\n\n  const onClickConnect = async () => {\n    try {\n      console.log('connecting');\n      //const { ethereum } = window;\n\n\n\n      // Will open the MetaMask UI\n      // You should disable this button while the request is pending!\n      const newAccounts = await ethereum.request({ method: 'eth_requestAccounts' });\n      console.log('request', newAccounts);\n      onboardButton.innerText = 'Disconnect Wallet';\n\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n  const MetaMaskClientCheck = () => {\n    //Now we check to see if Metmask is installed\n    if (!isMetaMaskInstalled()) {\n      //If it isn't installed we ask the user to click to install it\n      onboardButton.innerText = 'Click here to install MetaMask!';\n      //When the button is clicked we call th is function\n      onboardButton.onclick = onClickInstall;\n      //The button is now disabled\n      onboardButton.disabled = false;\n    } else {\n      //If MetaMask is installed we ask the user to connect to their wallet\n      onboardButton.innerText = 'Connect Wallet';\n      //When the button is clicked we call this function to connect the users MetaMask Wallet\n      onboardButton.onclick = onClickConnect;\n      //The button is now disabled\n      onboardButton.disabled = false;\n    }\n  };\n\n\n\n  MetaMaskClientCheck();\n};\n\nwindow.addEventListener('DOMContentLoaded', initialize);\n\n*/\n\n\n\n/*async function checkMetamask(){\n\n  provider = await detectEthereumProvider();\n  if (provider) {\n    console.log('Metamask successfully detected!');\n    //const provider = new WalletConnectProvider({\n      //  infuraId: \"27e484dcd9e3efcfd25a83a78777cdf1\",\n      //});\n    return web3Provider = new ethers.providers.Web3Provider(window.ethereum); //provider\n\n  }\n  else{\n    console.log('Please install metamask');\n    alert('Please install metamask');\n    return false;\n  }\n\n}\n\n\nasync function connectMetamask(){\n  try {\n    // Will open the MetaMask UI\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    if (accounts.length > 0 ){\n      const account = accounts[0];\n      console.log('Account Connected:', account);\n      provider = await checkMetamask();\n      console.log('Provider', provider);\n      return provider;\n\n    }\n    else {\n      console.log('Connect metamask');\n    }\n\n\n  } catch (error) {\n    console.error(error);\n    alert(error);\n    //return provider;\n  }\n}*/\n\nvar web3Provider, provider;\nconst forwarderOrigin = 'http://localhost:3000';\nconst onboardButton = document.getElementById('connectButton');\n\nlet connected = false;\nlet installed = false;\n\nasync function isMetaMaskConnected() {\n    const {ethereum} = window;\n    const accounts = await ethereum.request({method: 'eth_accounts'});\n    return accounts && accounts.length > 0;\n}\n\nfunction isMetaMaskInstalled() {\n    return Boolean(window.ethereum && window.ethereum.isMetaMask);\n}\n\nasync function initialise() {\n    connected = await isMetaMaskConnected();\n    installed = isMetaMaskInstalled();\n}\n\ninitialise();\n\nwindow.ethereum.on('accountsChanged', async () => {\n    initialise();\n});\n\n\n\n\nconst onClickConnect = async () => {\n  const { ethereum } = window;\n   try {\n     // Will open the MetaMask UI\n     console.log(\"Try to connect here\");\n     await ethereum.request({ method: 'eth_requestAccounts' });\n   } catch (error) {\n     console.error(error);\n   }\n };\n\n\n;\n\nfunction WalletButton({ provider, loadWeb3Modal, logoutOfWeb3Modal, clr}) {\n\n  const onboarding = new MetaMaskOnboarding({ forwarderOrigin });\n  var initialLabel = !provider ? \"Connect Wallet\" : \"Disconnect Wallet\";\n  const [label, setLabel] = useState(initialLabel);\n  return (\n\n    <Button id=\"connectButton\" primary size=\"large\" align=\"center\" color=\"#FBA300\" className=\"mainConnect\" label={!connected ? \"Connect Wallet2\" : \"Disconnect Wallet\"} onClick={async () => {\n      onClickConnect();\n\n      if (connected){\n        //onboardButton.innerText(\"Disconnect Wallet\");\n      }\n\n      if (typeof window.ethereum === 'undefined') {\n        console.log('stuff', typeof window.ethereum);\n        onboarding.startOnboarding();\n        alert('Please install metamask to use this site');\n        return;\n      }\n\n      /*if (!provider) {\n        setLabel(\"Connect Wallet\");\n        loadWeb3Modal();\n      } else {\n        setLabel(\"Disconnect Wallet\");\n        logoutOfWeb3Modal();\n      }*/\n\n    }}/>\n\n  );\n}\n\n\n\n\n\nfunction App() {\n\n  const { loading, error, data } = useQuery(GET_TRANSFERS);\n  const [provider, loadWeb3Modal, logoutOfWeb3Modal] = useWeb3Modal();\n  const items = [\n    { label: 'Teleport', href: '/' }\n  ];\n\n  React.useEffect(() => {\n    if (!loading && !error && data && data.transfers) {\n      console.log({ transfers: data.transfers });\n    }\n  }, [loading, error, data]);\n\n  //connectMetamask();\n\n  return (\n    <div>\n    <Collapsible btn={ WalletButton({ provider, loadWeb3Modal, logoutOfWeb3Modal, clr}) }/>\n        <Router>\n          <Switch>\n\n\n            <Route exact path=\"/\">\n              <Teleport btn={ WalletButton({ provider, loadWeb3Modal, logoutOfWeb3Modal, clr}) }/>\n            </Route>\n\n          </Switch>\n        </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,GAA/B,EAAoCC,OAApC,EAA6CC,iBAA7C,QAAsE,SAAtE;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;AAEA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,iBAApC,QAA6D,eAA7D;AACA,OAAOC,qBAAP,MAAkC,8BAAlC;AAEA,SACEC,OADF,QAEO,eAFP;AAIA,IAAIC,GAAG,GAAG,SAAV;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,YAAJ,EAAkBC,QAAlB;AACA,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"},"metadata":{},"sourceType":"module"}