{"ast":null,"code":"var _excluded = [\"a11yTitle\", \"axis\", \"bounds\", \"chart\", \"data\", \"detail\", \"gap\", \"guide\", \"legend\", \"offset\", \"placeholder\", \"pad\", \"series\", \"size\"],\n    _excluded2 = [\"property\", \"type\", \"x\", \"y\"],\n    _excluded3 = [\"property\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, useContext, useMemo, useRef, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { useLayoutEffect } from '../../utils/use-isomorphic-layout-effect';\nimport { Box } from '../Box';\nimport { Chart, calcs, calcBounds } from '../Chart';\nimport { Grid } from '../Grid';\nimport { Stack } from '../Stack';\nimport { Text } from '../Text';\nimport { parseMetricToNum } from '../../utils';\nimport { Detail } from './Detail';\nimport { Legend } from './Legend';\nimport { XAxis } from './XAxis';\nimport { YAxis } from './YAxis';\nimport { XGuide } from './XGuide';\nimport { YGuide } from './YGuide';\nimport { createDateFormat, halfPad, heightYGranularity, points } from './utils';\nimport { DataChartPropTypes } from './propTypes';\nvar stackedChartType = {\n  areas: 'area',\n  bars: 'bar',\n  lines: 'line'\n}; // DataChart takes a generic data array of objects plus as few properties\n// as possible, and creates a Stack of Charts with x and y axes, a legend,\n// and interactive detail.\n// Much of the code here-in involves the \"few properties\" aspect where we\n// normalize and automatically handle whatever the caller didn't specify.\n\nvar DataChart = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _boundsProp$y;\n\n  var a11yTitle = _ref.a11yTitle,\n      _ref$axis = _ref.axis,\n      axisProp = _ref$axis === void 0 ? true : _ref$axis,\n      _ref$bounds = _ref.bounds,\n      boundsProp = _ref$bounds === void 0 ? 'align' : _ref$bounds,\n      chart = _ref.chart,\n      _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      detail = _ref.detail,\n      _ref$gap = _ref.gap,\n      gap = _ref$gap === void 0 ? 'small' : _ref$gap,\n      guideProp = _ref.guide,\n      legend = _ref.legend,\n      offset = _ref.offset,\n      placeholder = _ref.placeholder,\n      padProp = _ref.pad,\n      seriesProp = _ref.series,\n      size = _ref.size,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme; // legend interaction, if any\n\n  var _useState = useState(),\n      activeProperty = _useState[0],\n      setActiveProperty = _useState[1]; // refs used for ie11 not having Grid\n\n\n  var xRef = useRef();\n  var spacerRef = useRef(); // normalize seriesProp to an array of objects, one per property\n\n  var series = useMemo(function () {\n    if (Array.isArray(seriesProp)) return seriesProp.filter(function (s) {\n      return s.property || typeof s === 'string';\n    }).map(function (s) {\n      return typeof s === 'string' ? {\n        property: s\n      } : s;\n    });\n    if (typeof seriesProp === 'string') return [{\n      property: seriesProp\n    }];\n    if (seriesProp) return [seriesProp];\n    return [];\n  }, [seriesProp]);\n\n  var getPropertySeries = function getPropertySeries(prop) {\n    return series.find(function (_ref2) {\n      var property = _ref2.property;\n      return prop === property;\n    });\n  }; // Normalize chart to an array of objects.\n  // Each chart has one or more properties associated with it.\n  // A stacked bar or area chart has an array of properties.\n  // A point chart can have x, y, thickness, and color each driven\n  // by a separate property.\n\n\n  var charts = useMemo(function () {\n    if (!chart) {\n      if (series.length === 1) return series.filter(function (s) {\n        return s.property;\n      }).map(function (s) {\n        return {\n          property: s.property\n        };\n      }); // if we have more than one property, we'll use the first for\n      // the x-axis and we'll plot the rest\n\n      return series.slice(1).map(function (s) {\n        return {\n          property: s.property\n        };\n      });\n    }\n\n    if (Array.isArray(chart)) return chart.map(function (c) {\n      return typeof c === 'string' ? {\n        property: c\n      } : c;\n    }).filter(function (_ref3) {\n      var property = _ref3.property;\n      return property;\n    });\n    if (typeof chart === 'string') return [{\n      property: chart\n    }];\n    if (chart) return [chart];\n    return [];\n  }, [chart, series]); // map the series property values into their own arrays\n\n  var seriesValues = useMemo(function () {\n    var result = {};\n    series.forEach(function (_ref4) {\n      var property = _ref4.property;\n      result[property] = data.map(function (d) {\n        return d[property];\n      });\n    });\n    return result;\n  }, [data, series]); // Setup the values property for each chart.\n  // The index into 'charts' can be used to index into 'chartValues'.\n\n  var chartValues = useMemo(function () {\n    return charts.map(function (_ref5) {\n      var opacity = _ref5.opacity,\n          property = _ref5.property,\n          type = _ref5.type;\n\n      if (property) {\n        if (Array.isArray(property)) {\n          // A range chart or a stacked bar or area chart has multiple\n          // properties.\n          // In this case, this returns an array of values,\n          // one per property.\n          if (stackedChartType[type]) {\n            // Further down, where we render, each property is rendered\n            // using a separate Chart component and the values are stacked\n            // such that they line up appropriately.\n            var totals = [];\n            return property.map(function (cp) {\n              // handle object or string\n              var aProperty = cp.property || cp;\n              var values = seriesValues[aProperty];\n              if (!values) return undefined; // property name isn't valid\n\n              return values.map(function (v, i) {\n                var base = totals[i] || 0;\n                totals[i] = base + v;\n                if (type === 'lines') return [i, base + v];\n                return [i, base, base + v];\n              });\n            });\n          }\n\n          return data.map(function (_, index) {\n            return [index].concat(property.map(function (p) {\n              return seriesValues[p] ? seriesValues[p][index] : data[index][p];\n            }));\n          });\n        }\n\n        if (typeof property === 'object') {\n          // When 'property' is an array, the keys of this array indicate\n          // which property drives which part of the rendered Chart.\n          var color = property.color,\n              thickness = property.thickness,\n              x = property.x,\n              y = property.y,\n              y2 = property.y2;\n          return seriesValues[x].map(function (value, index) {\n            var aValue = {\n              value: [value]\n            };\n            aValue.value.push(seriesValues[y][index]);\n            if (y2) aValue.value.push(seriesValues[y2][index]);\n\n            if (thickness) {\n              var t = seriesValues[thickness.property || thickness][index];\n              aValue.thickness = thickness.transform ? thickness.transform(t) : t;\n            }\n\n            if (color) {\n              var c = seriesValues[color.property || color][index];\n              aValue.color = color.transform ? color.transform(c) : c;\n            }\n\n            if (opacity) aValue.opacity = opacity;\n            return aValue;\n          });\n        }\n\n        return seriesValues[property];\n      }\n\n      return undefined;\n    });\n  }, [charts, data, seriesValues]); // map granularities to work well with the number of data points we have\n\n  var granularities = useMemo(function () {\n    var medium; // determine a good medium granularity that will align well with the\n    // length of the data\n\n    var steps = data.length - 1; // special case property driven point charts\n\n    if (charts[0] && typeof charts[0].property === 'object') medium = 3;else if (steps < 4) medium = data.length;else if (steps === 4) medium = 3;else if (steps % 4 === 0) medium = 5;else if (steps % 3 === 0) medium = 4;else if (steps % 2 === 0) medium = 3;else medium = 2;\n    return {\n      x: {\n        coarse: Math.min(data.length, 2),\n        fine: data.length,\n        medium: medium\n      },\n      y: _extends({}, heightYGranularity[size && size.height || 'small'] || {\n        fine: 5,\n        medium: 3\n      }, {\n        coarse: 2\n      })\n    };\n  }, [charts, data.length, size]); // normalize axis to objects, convert granularity to a number\n\n  var axis = useMemo(function () {\n    if (!axisProp) return undefined;\n    var result = {};\n    if (axisProp === true || axisProp.x === true) result.x = {};\n    if (axisProp === true || axisProp.y === true) result.y = {};\n    if (!result.x && axisProp.x) result.x = typeof axisProp.x === 'string' ? {\n      property: axisProp.x\n    } : _extends({}, axisProp.x);\n    if (!result.y && axisProp.y) result.y = typeof axisProp.y === 'string' ? {\n      property: axisProp.y\n    } : _extends({}, axisProp.y);\n\n    if (result.x) {\n      if (!result.x.property) {\n        // see if we have a point chart that has an x property\n        if (data && data[0]) {\n          if (data[0].date) result.x.property = 'date';else if (data[0].time) result.x.property = 'time';\n        }\n      }\n\n      if (!result.x.granularity) result.x.granularity = 'coarse';\n    }\n\n    if (result.y) {\n      if (!result.y.property && charts[0]) // see if we have a point chart that has an x property\n        result.y.property = charts[0].property.y || charts[0].property;\n      if (!result.y.granularity) result.y.granularity = 'coarse';\n    } // calculate number of entries based on granularity\n\n\n    if (result.x) {\n      var _result$x$granularity = result.x.granularity,\n          granularity = _result$x$granularity === void 0 ? 'coarse' : _result$x$granularity;\n      result.x.count = granularities.x[granularity];\n    }\n\n    if (result.y) {\n      var _result$y$granularity = result.y.granularity,\n          _granularity = _result$y$granularity === void 0 ? 'coarse' : _result$y$granularity;\n\n      result.y.count = granularities.y[_granularity];\n    }\n\n    return result;\n  }, [axisProp, data, charts, granularities]); // calculate axis, bounds, and thickness for each chart\n\n  var chartProps = useMemo(function () {\n    var steps = [];\n    var coarseness = [undefined, 5];\n\n    if (axis && axis.x) {\n      var _axis$x$granularity = axis.x.granularity,\n          granularity = _axis$x$granularity === void 0 ? 'coarse' : _axis$x$granularity;\n      steps[0] = granularities.x[granularity] - 1;\n    } else steps[0] = data.length - 1;\n\n    if (axis && axis.y) {\n      var _axis$y$granularity = axis.y.granularity,\n          _granularity2 = _axis$y$granularity === void 0 ? 'coarse' : _axis$y$granularity;\n\n      steps[1] = granularities.y[_granularity2] - 1;\n    } else steps[1] = 1;\n\n    var chartBounds = chartValues.map(function (_, index) {\n      var type = charts[index].type;\n\n      if (stackedChartType[type]) {\n        var _chartValues$index, _chartValues$index$; // merge values for bars, areas, and lines cases\n\n\n        var mergedValues = ((_chartValues$index = chartValues[index]) == null ? void 0 : (_chartValues$index$ = _chartValues$index[0]) == null ? void 0 : _chartValues$index$.slice(0)) || [];\n        chartValues[index].slice(1) // skip first index as that is the x value\n        .filter(function (values) {\n          return values;\n        }) // property name isn't valid\n        .forEach(function (values) {\n          mergedValues = mergedValues.map(function (__, i) {\n            return type === 'lines' ? [i, Math.min(mergedValues[i][1], values[i][1]), Math.max(mergedValues[i][1], values[i][1])] : [i, Math.min(mergedValues[i][1], values[i][1]), Math.max(mergedValues[i][2], values[i][2])];\n          });\n        });\n        return calcBounds(mergedValues, {\n          coarseness: coarseness,\n          steps: steps\n        });\n      } // if this is a data driven x chart, set coarseness for x\n\n\n      return calcBounds(chartValues[index], {\n        coarseness: charts[index].property.x ? [5, 5] : coarseness,\n        steps: steps\n      });\n    });\n\n    if (boundsProp === 'align' && chartBounds.length) {\n      var alignedBounds = [].concat(chartBounds[0]);\n      chartBounds.forEach(function (bounds) {\n        alignedBounds[0][0] = Math.min(alignedBounds[0][0], bounds[0][0]);\n        alignedBounds[0][1] = Math.max(alignedBounds[0][1], bounds[0][1]);\n        alignedBounds[1][0] = Math.min(alignedBounds[1][0], bounds[1][0]);\n        alignedBounds[1][1] = Math.max(alignedBounds[1][1], bounds[1][1]);\n      });\n      chartBounds = chartBounds.map(function () {\n        return alignedBounds;\n      });\n    }\n\n    if (typeof boundsProp === 'object') {\n      if (boundsProp.y) chartBounds = chartBounds.map(function (b) {\n        return [b[0], [].concat(boundsProp.y)];\n      });\n    }\n\n    return chartValues.map(function (values, index) {\n      var _charts$index = charts[index],\n          thickness = _charts$index.thickness,\n          type = _charts$index.type;\n      var calcValues = stackedChartType[type] ? values[0] : values;\n      return calcs(calcValues, {\n        bounds: chartBounds[index],\n        steps: steps,\n        thickness: thickness\n      });\n    });\n  }, [axis, boundsProp, charts, chartValues, data, granularities]); // normalize how we style data properties for use by Legend and Detail\n\n  var seriesStyles = useMemo(function () {\n    var result = {}; // start from what we were explicitly given\n\n    charts.forEach(function (_ref6, index) {\n      var color = _ref6.color,\n          point = _ref6.point,\n          property = _ref6.property,\n          thickness = _ref6.thickness,\n          type = _ref6.type;\n      var calcThickness = chartProps[index].thickness;\n\n      if (typeof property === 'object' && !Array.isArray(property)) {\n        // data driven point chart\n        Object.keys(property).forEach(function (aspect) {\n          var prop = property[aspect];\n          if (!result[prop.property || prop]) result[prop.property || prop] = {\n            aspect: aspect\n          };\n        });\n      } else {\n        var props = Array.isArray(property) ? property : [property];\n        props.forEach(function (prop) {\n          var p = prop.property || prop;\n          var pColor = prop.color || color;\n          if (!result[p]) result[p] = {};\n          if (pColor && !result[p].color) result[p].color = pColor;\n          if (point && !result[p].point) result[p].point = point;else if (type === 'point') result[p].point = false;\n          if ((thickness || calcThickness) && !result[p].thickness) result[p].thickness = thickness || calcThickness;\n        });\n      }\n    }); // set color for any non-aspect properties we don't have one for yet\n\n    var colorIndex = 0;\n    var pointIndex = 0;\n    Object.keys(result).forEach(function (key) {\n      var seriesStyle = result[key];\n\n      if (!seriesStyle.aspect && !seriesStyle.color) {\n        seriesStyle.color = \"graph-\" + colorIndex;\n        colorIndex += 1;\n      } // set opacity if it isn't set and this isn't the active property\n\n\n      if (activeProperty !== undefined && activeProperty !== key) {\n        seriesStyle.opacity = 'medium';\n      }\n\n      if (seriesStyle.point === false) {\n        seriesStyle.point = points[pointIndex];\n        pointIndex += 1;\n      }\n    });\n    return result;\n  }, [activeProperty, charts, chartProps]); // normalize guide\n\n  var guide = useMemo(function () {\n    if (!guideProp) return undefined;\n    var result;\n\n    if (guideProp === true) {\n      result = {\n        x: {},\n        y: {}\n      };\n    } else {\n      result = {};\n      if (guideProp.x) result.x = _extends({}, guideProp.x);\n      if (guideProp.y) result.y = _extends({}, guideProp.y);\n    } // set counts\n\n\n    if (result.x) {\n      // if no granularity and axis, align count with axis\n      if (!result.x.granularity && axis && axis.x) result.x.count = axis.x.count;\n      if (!result.x.count) result.x.count = granularities.x[result.x.granularity || 'coarse'];\n    }\n\n    if (result.y) {\n      // if no granularity and axis, align count with axis\n      if (!result.y.granularity && axis && axis.y) result.y.count = axis.y.count;\n      if (!result.y.count) result.y.count = granularities.y[result.y.granularity || 'coarse'];\n    }\n\n    return result;\n  }, [axis, granularities, guideProp]); // set the pad to half the thickness, based on the chart types\n  // except when using offset, then add even more horizontal pad\n\n  var pad = useMemo(function () {\n    if (padProp !== undefined) return padProp;\n    var result = {};\n    charts.forEach(function (_ref7, index) {\n      var type = _ref7.type;\n      var thickness = chartProps[index].thickness;\n      result.horizontal = halfPad[thickness];\n      if (type && type !== 'bar') result.vertical = halfPad[thickness];\n    });\n    return result;\n  }, [chartProps, charts, padProp]); // calculate the thickness in pixels of each chart\n\n  var thicknesses = useMemo(function () {\n    return offset ? charts.map(function (_, index) {\n      var thickness = chartProps[index].thickness;\n      return parseMetricToNum(theme.global.edgeSize[thickness] || thickness);\n    }) : undefined;\n  }, [charts, chartProps, offset, theme]); // normalize any offset gap\n\n  var offsetGap = useMemo(function () {\n    return (offset == null ? void 0 : offset.gap) && parseMetricToNum(theme.global.edgeSize[offset.gap] || offset.gap) || 0;\n  }, [offset, theme]); // calculate the offset for each chart, which is a sum of the thicknesses\n  // any offset gaps that preceded it\n\n  var offsets = useMemo(function () {\n    if (offset) {\n      return thicknesses.map(function (t, i) {\n        return thicknesses.slice(0, i).reduce(function (a, b) {\n          return a + b + offsetGap;\n        }, 0);\n      });\n    }\n\n    return undefined;\n  }, [offset, offsetGap, thicknesses]); // Calculate the total pad we should add to the end of each chart.\n  // We do this to shrink the width of each chart so we can shift them\n  // via `translate` and have them take up the right amount of width.\n\n  var offsetPad = useMemo(function () {\n    return offsets ? offsets[offsets.length - 1] + thicknesses[thicknesses.length - 1] + \"px\" : undefined;\n  }, [offsets, thicknesses]); // The thickness of the Detail segments. We need to convert to numbers\n  // to be able to compare across charts where some might be using T-shirt\n  // labels and others might be pixel values.\n\n  var detailThickness = useMemo(function () {\n    var result = 0;\n\n    if (detail) {\n      charts.forEach(function (_, index) {\n        var thickness = chartProps[index].thickness;\n        result = Math.max(result, parseMetricToNum(theme.global.edgeSize[thickness] || thickness));\n      });\n    }\n\n    return result + \"px\";\n  }, [charts, chartProps, detail, theme]);\n  var dateFormats = useMemo(function () {\n    var result = {};\n    var full = axis && axis.x && axis.x.granularity === 'coarse';\n    series.forEach(function (_ref8) {\n      var property = _ref8.property,\n          render = _ref8.render;\n\n      if (!render && data.length > 1 && typeof data[0][property] === 'string') {\n        result[property] = createDateFormat(data[0][property], data[data.length - 1][property], full);\n      }\n    });\n    return result;\n  }, [axis, data, series]); // for ie11, align the spacer Box height to the x-axis height\n\n  useLayoutEffect(function () {\n    if (xRef.current && spacerRef.current) {\n      var rect = xRef.current.getBoundingClientRect();\n      spacerRef.current.style.height = rect.height + \"px\";\n    }\n  }, []);\n\n  var renderValue = function renderValue(serie, dataIndex, valueArg) {\n    var value;\n\n    if (valueArg !== undefined) {\n      if (serie && serie.render) return serie.render(valueArg);\n      value = valueArg;\n    } else {\n      var datum = data[dataIndex];\n      value = datum[serie.property];\n      if (serie && serie.render) return serie.render(value, datum, serie.property);\n    }\n\n    if (serie) {\n      var dateFormat = dateFormats[serie.property];\n      if (dateFormat) return dateFormat(new Date(value));\n      if (serie.prefix) value = \"\" + serie.prefix + value;\n      if (serie.suffix) value = \"\" + value + serie.suffix;\n    }\n\n    return value;\n  }; // TODO: revisit how x/y axis are hooked up to charts and series\n\n\n  var xAxisElement = axis && axis.x && chartProps.length ? /*#__PURE__*/React.createElement(XAxis, {\n    ref: xRef,\n    axis: axis,\n    values: (Array.isArray(chartProps[0]) ? chartProps[0][0] : chartProps[0]).axis[0],\n    pad: offsetPad ? _extends({}, pad, {\n      end: offsetPad\n    }) : pad,\n    renderValue: renderValue,\n    serie: axis.x.property && getPropertySeries(axis.x.property),\n    style: offsetPad ? {\n      transform: \"translate(\" + offsets[Math.floor(offsets.length / 2)] + \"px, 0px)\"\n    } : {}\n  }) : null;\n  var yAxisElement = axis && axis.y && (chartProps.length || boundsProp != null && boundsProp.y) ? /*#__PURE__*/React.createElement(YAxis, {\n    axis: axis,\n    values: (boundsProp == null ? void 0 : (_boundsProp$y = boundsProp.y) == null ? void 0 : _boundsProp$y.slice(0).reverse()) || (Array.isArray(chartProps[0]) ? chartProps[0][0] : chartProps[0]).axis[1],\n    pad: pad,\n    renderValue: renderValue,\n    serie: axis.y.property && getPropertySeries(axis.y.property)\n  }) : null;\n  var stackFill = useMemo(function () {\n    if (size === 'fill' || size && size.width === 'fill' && size.height === 'fill') return true;\n    if (size && size.width === 'fill') return 'horizontal';\n    if (size && size.height === 'fill') return 'vertical';\n    return undefined;\n  }, [size]);\n  var guidingChild = useMemo(function () {\n    var result = 0;\n    if (guide && guide.x) result += 1;\n    if (guide && guide.y) result += 1;\n    return result;\n  }, [guide]);\n  var stackElement = /*#__PURE__*/React.createElement(Stack, {\n    gridArea: \"charts\",\n    guidingChild: guidingChild,\n    fill: stackFill\n  }, guide && guide.x && /*#__PURE__*/React.createElement(XGuide, {\n    guide: guide,\n    pad: pad\n  }), guide && guide.y && /*#__PURE__*/React.createElement(YGuide, {\n    guide: guide,\n    pad: pad\n  }), charts.map(function (_ref9, i) {\n    var prop = _ref9.property,\n        type = _ref9.type,\n        x = _ref9.x,\n        y = _ref9.y,\n        chartRest = _objectWithoutPropertiesLoose(_ref9, _excluded2); // When we offset, we increase the padding on the end for all charts\n    // by the same amount and we shift each successive chart to the\n    // right by an offset for that chart. The last chart's right side\n    // will end up aligning with where the charts would have been\n    // had we not padded their ends.\n\n\n    var chartPad = offsetPad ? _extends({}, pad, {\n      end: offsetPad\n    }) : pad;\n    var offsetProps = offsetPad ? {\n      style: {\n        transform: \"translate(\" + offsets[i] + \"px, 0px)\"\n      }\n    } : {};\n\n    if (stackedChartType[type]) {\n      // reverse to ensure area Charts are stacked in the right order\n      return prop.map(function (cProp, j) {\n        var pProp = cProp.property || cProp;\n\n        var _ref10 = typeof cProp === 'object' ? cProp : {},\n            property = _ref10.property,\n            propRest = _objectWithoutPropertiesLoose(_ref10, _excluded3);\n\n        return /*#__PURE__*/React.createElement(Chart // eslint-disable-next-line react/no-array-index-key\n        , _extends({\n          key: j // when property name isn't valid, send empty array\n          ,\n          values: chartValues[i][j] || [],\n          overflow: true\n        }, seriesStyles[pProp], chartProps[i], chartRest, propRest, offsetProps, {\n          type: stackedChartType[type] || type,\n          size: size,\n          pad: chartPad\n        }));\n      }).reverse();\n    }\n\n    return /*#__PURE__*/React.createElement(Chart // eslint-disable-next-line react/no-array-index-key\n    , _extends({\n      key: i,\n      values: chartValues[i],\n      overflow: true\n    }, seriesStyles[prop], chartProps[i], chartRest, offsetProps, {\n      type: type,\n      size: size,\n      pad: chartPad\n    }));\n  }), placeholder && (typeof placeholder === 'string' && /*#__PURE__*/React.createElement(Box, {\n    fill: \"vertical\",\n    align: \"center\",\n    justify: \"center\",\n    background: {\n      color: 'background-front',\n      opacity: 'strong'\n    },\n    margin: pad\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text-weak\"\n  }, placeholder)) || placeholder), detail && /*#__PURE__*/React.createElement(Detail, {\n    activeProperty: activeProperty,\n    axis: axis,\n    data: data,\n    pad: pad,\n    series: series,\n    seriesStyles: seriesStyles,\n    renderValue: renderValue,\n    thickness: detailThickness\n  }));\n  var legendElement = legend ? /*#__PURE__*/React.createElement(Legend, {\n    series: series,\n    seriesStyles: seriesStyles,\n    activeProperty: activeProperty,\n    setActiveProperty: setActiveProperty\n  }) : null; // IE11\n\n  if (!Grid.available) {\n    var _content = stackElement;\n\n    if (xAxisElement) {\n      _content = /*#__PURE__*/React.createElement(Box, null, _content, xAxisElement);\n    }\n\n    if (yAxisElement) {\n      _content = /*#__PURE__*/React.createElement(Box, {\n        direction: \"row\"\n      }, /*#__PURE__*/React.createElement(Box, null, yAxisElement, /*#__PURE__*/React.createElement(Box, {\n        ref: spacerRef,\n        flex: false\n      })), _content);\n    }\n\n    if (legendElement) {\n      _content = /*#__PURE__*/React.createElement(Box, null, _content, legendElement);\n    }\n\n    return _content;\n  }\n\n  var content = /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    \"aria-label\": a11yTitle,\n    fill: stackFill,\n    columns: ['auto', stackFill === true || stackFill === 'horizontal' ? 'flex' : 'auto'],\n    rows: [stackFill === true || stackFill === 'vertical' ? 'flex' : 'auto', 'auto'],\n    areas: [{\n      name: 'yAxis',\n      start: [0, 0],\n      end: [0, 0]\n    }, {\n      name: 'xAxis',\n      start: [1, 1],\n      end: [1, 1]\n    }, {\n      name: 'charts',\n      start: [1, 0],\n      end: [1, 0]\n    }],\n    gap: gap\n  }, rest), xAxisElement, yAxisElement, stackElement);\n\n  if (legendElement) {\n    content = /*#__PURE__*/React.createElement(Box, {\n      align: \"start\"\n    }, content, legendElement);\n  }\n\n  return content;\n});\nDataChart.displayName = 'DataChart';\nDataChart.propTypes = DataChartPropTypes;\nexport { DataChart };","map":{"version":3,"names":["_excluded","_excluded2","_excluded3","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","useContext","useMemo","useRef","useState","ThemeContext","useLayoutEffect","Box","Chart","calcs","calcBounds","Grid","Stack","Text","parseMetricToNum","Detail","Legend","XAxis","YAxis","XGuide","YGuide","createDateFormat","halfPad","heightYGranularity","points","DataChartPropTypes","stackedChartType","areas","bars","lines","DataChart","_ref","ref","_boundsProp$y","a11yTitle","_ref$axis","axis","axisProp","_ref$bounds","bounds","boundsProp","chart","_ref$data","data","detail","_ref$gap","gap","guideProp","guide","legend","offset","placeholder","padProp","pad","seriesProp","series","size","rest","theme","defaultProps","_useState","activeProperty","setActiveProperty","xRef","spacerRef","Array","isArray","filter","s","property","map","getPropertySeries","prop","find","_ref2","charts","slice","c","_ref3","seriesValues","result","forEach","_ref4","d","chartValues","_ref5","opacity","type","totals","cp","aProperty","values","undefined","v","base","_","index","concat","p","color","thickness","x","y","y2","value","aValue","push","t","transform","granularities","medium","steps","coarse","Math","min","fine","height","date","time","granularity","_result$x$granularity","count","_result$y$granularity","_granularity","chartProps","coarseness","_axis$x$granularity","_axis$y$granularity","_granularity2","chartBounds","_chartValues$index","_chartValues$index$","mergedValues","__","max","alignedBounds","b","_charts$index","calcValues","seriesStyles","_ref6","point","calcThickness","aspect","props","pColor","colorIndex","pointIndex","seriesStyle","_ref7","horizontal","vertical","thicknesses","global","edgeSize","offsetGap","offsets","reduce","a","offsetPad","detailThickness","dateFormats","full","_ref8","render","current","rect","getBoundingClientRect","style","renderValue","serie","dataIndex","valueArg","datum","dateFormat","Date","prefix","suffix","xAxisElement","createElement","end","floor","yAxisElement","reverse","stackFill","width","guidingChild","stackElement","gridArea","fill","_ref9","chartRest","chartPad","offsetProps","cProp","j","pProp","_ref10","propRest","overflow","align","justify","background","margin","legendElement","available","_content","direction","flex","content","columns","rows","name","start","displayName","propTypes"],"sources":["/Library/WebServer/Documents/MachineLearning/trading/PKT-CASH/LUX/LUXDApp/packages/react-app/node_modules/grommet/es6/components/DataChart/DataChart.js"],"sourcesContent":["var _excluded = [\"a11yTitle\", \"axis\", \"bounds\", \"chart\", \"data\", \"detail\", \"gap\", \"guide\", \"legend\", \"offset\", \"placeholder\", \"pad\", \"series\", \"size\"],\n    _excluded2 = [\"property\", \"type\", \"x\", \"y\"],\n    _excluded3 = [\"property\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef, useContext, useMemo, useRef, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { useLayoutEffect } from '../../utils/use-isomorphic-layout-effect';\nimport { Box } from '../Box';\nimport { Chart, calcs, calcBounds } from '../Chart';\nimport { Grid } from '../Grid';\nimport { Stack } from '../Stack';\nimport { Text } from '../Text';\nimport { parseMetricToNum } from '../../utils';\nimport { Detail } from './Detail';\nimport { Legend } from './Legend';\nimport { XAxis } from './XAxis';\nimport { YAxis } from './YAxis';\nimport { XGuide } from './XGuide';\nimport { YGuide } from './YGuide';\nimport { createDateFormat, halfPad, heightYGranularity, points } from './utils';\nimport { DataChartPropTypes } from './propTypes';\nvar stackedChartType = {\n  areas: 'area',\n  bars: 'bar',\n  lines: 'line'\n}; // DataChart takes a generic data array of objects plus as few properties\n// as possible, and creates a Stack of Charts with x and y axes, a legend,\n// and interactive detail.\n// Much of the code here-in involves the \"few properties\" aspect where we\n// normalize and automatically handle whatever the caller didn't specify.\n\nvar DataChart = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _boundsProp$y;\n\n  var a11yTitle = _ref.a11yTitle,\n      _ref$axis = _ref.axis,\n      axisProp = _ref$axis === void 0 ? true : _ref$axis,\n      _ref$bounds = _ref.bounds,\n      boundsProp = _ref$bounds === void 0 ? 'align' : _ref$bounds,\n      chart = _ref.chart,\n      _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      detail = _ref.detail,\n      _ref$gap = _ref.gap,\n      gap = _ref$gap === void 0 ? 'small' : _ref$gap,\n      guideProp = _ref.guide,\n      legend = _ref.legend,\n      offset = _ref.offset,\n      placeholder = _ref.placeholder,\n      padProp = _ref.pad,\n      seriesProp = _ref.series,\n      size = _ref.size,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme; // legend interaction, if any\n\n  var _useState = useState(),\n      activeProperty = _useState[0],\n      setActiveProperty = _useState[1]; // refs used for ie11 not having Grid\n\n\n  var xRef = useRef();\n  var spacerRef = useRef(); // normalize seriesProp to an array of objects, one per property\n\n  var series = useMemo(function () {\n    if (Array.isArray(seriesProp)) return seriesProp.filter(function (s) {\n      return s.property || typeof s === 'string';\n    }).map(function (s) {\n      return typeof s === 'string' ? {\n        property: s\n      } : s;\n    });\n    if (typeof seriesProp === 'string') return [{\n      property: seriesProp\n    }];\n    if (seriesProp) return [seriesProp];\n    return [];\n  }, [seriesProp]);\n\n  var getPropertySeries = function getPropertySeries(prop) {\n    return series.find(function (_ref2) {\n      var property = _ref2.property;\n      return prop === property;\n    });\n  }; // Normalize chart to an array of objects.\n  // Each chart has one or more properties associated with it.\n  // A stacked bar or area chart has an array of properties.\n  // A point chart can have x, y, thickness, and color each driven\n  // by a separate property.\n\n\n  var charts = useMemo(function () {\n    if (!chart) {\n      if (series.length === 1) return series.filter(function (s) {\n        return s.property;\n      }).map(function (s) {\n        return {\n          property: s.property\n        };\n      }); // if we have more than one property, we'll use the first for\n      // the x-axis and we'll plot the rest\n\n      return series.slice(1).map(function (s) {\n        return {\n          property: s.property\n        };\n      });\n    }\n\n    if (Array.isArray(chart)) return chart.map(function (c) {\n      return typeof c === 'string' ? {\n        property: c\n      } : c;\n    }).filter(function (_ref3) {\n      var property = _ref3.property;\n      return property;\n    });\n    if (typeof chart === 'string') return [{\n      property: chart\n    }];\n    if (chart) return [chart];\n    return [];\n  }, [chart, series]); // map the series property values into their own arrays\n\n  var seriesValues = useMemo(function () {\n    var result = {};\n    series.forEach(function (_ref4) {\n      var property = _ref4.property;\n      result[property] = data.map(function (d) {\n        return d[property];\n      });\n    });\n    return result;\n  }, [data, series]); // Setup the values property for each chart.\n  // The index into 'charts' can be used to index into 'chartValues'.\n\n  var chartValues = useMemo(function () {\n    return charts.map(function (_ref5) {\n      var opacity = _ref5.opacity,\n          property = _ref5.property,\n          type = _ref5.type;\n\n      if (property) {\n        if (Array.isArray(property)) {\n          // A range chart or a stacked bar or area chart has multiple\n          // properties.\n          // In this case, this returns an array of values,\n          // one per property.\n          if (stackedChartType[type]) {\n            // Further down, where we render, each property is rendered\n            // using a separate Chart component and the values are stacked\n            // such that they line up appropriately.\n            var totals = [];\n            return property.map(function (cp) {\n              // handle object or string\n              var aProperty = cp.property || cp;\n              var values = seriesValues[aProperty];\n              if (!values) return undefined; // property name isn't valid\n\n              return values.map(function (v, i) {\n                var base = totals[i] || 0;\n                totals[i] = base + v;\n                if (type === 'lines') return [i, base + v];\n                return [i, base, base + v];\n              });\n            });\n          }\n\n          return data.map(function (_, index) {\n            return [index].concat(property.map(function (p) {\n              return seriesValues[p] ? seriesValues[p][index] : data[index][p];\n            }));\n          });\n        }\n\n        if (typeof property === 'object') {\n          // When 'property' is an array, the keys of this array indicate\n          // which property drives which part of the rendered Chart.\n          var color = property.color,\n              thickness = property.thickness,\n              x = property.x,\n              y = property.y,\n              y2 = property.y2;\n          return seriesValues[x].map(function (value, index) {\n            var aValue = {\n              value: [value]\n            };\n            aValue.value.push(seriesValues[y][index]);\n            if (y2) aValue.value.push(seriesValues[y2][index]);\n\n            if (thickness) {\n              var t = seriesValues[thickness.property || thickness][index];\n              aValue.thickness = thickness.transform ? thickness.transform(t) : t;\n            }\n\n            if (color) {\n              var c = seriesValues[color.property || color][index];\n              aValue.color = color.transform ? color.transform(c) : c;\n            }\n\n            if (opacity) aValue.opacity = opacity;\n            return aValue;\n          });\n        }\n\n        return seriesValues[property];\n      }\n\n      return undefined;\n    });\n  }, [charts, data, seriesValues]); // map granularities to work well with the number of data points we have\n\n  var granularities = useMemo(function () {\n    var medium; // determine a good medium granularity that will align well with the\n    // length of the data\n\n    var steps = data.length - 1; // special case property driven point charts\n\n    if (charts[0] && typeof charts[0].property === 'object') medium = 3;else if (steps < 4) medium = data.length;else if (steps === 4) medium = 3;else if (steps % 4 === 0) medium = 5;else if (steps % 3 === 0) medium = 4;else if (steps % 2 === 0) medium = 3;else medium = 2;\n    return {\n      x: {\n        coarse: Math.min(data.length, 2),\n        fine: data.length,\n        medium: medium\n      },\n      y: _extends({}, heightYGranularity[size && size.height || 'small'] || {\n        fine: 5,\n        medium: 3\n      }, {\n        coarse: 2\n      })\n    };\n  }, [charts, data.length, size]); // normalize axis to objects, convert granularity to a number\n\n  var axis = useMemo(function () {\n    if (!axisProp) return undefined;\n    var result = {};\n    if (axisProp === true || axisProp.x === true) result.x = {};\n    if (axisProp === true || axisProp.y === true) result.y = {};\n    if (!result.x && axisProp.x) result.x = typeof axisProp.x === 'string' ? {\n      property: axisProp.x\n    } : _extends({}, axisProp.x);\n    if (!result.y && axisProp.y) result.y = typeof axisProp.y === 'string' ? {\n      property: axisProp.y\n    } : _extends({}, axisProp.y);\n\n    if (result.x) {\n      if (!result.x.property) {\n        // see if we have a point chart that has an x property\n        if (data && data[0]) {\n          if (data[0].date) result.x.property = 'date';else if (data[0].time) result.x.property = 'time';\n        }\n      }\n\n      if (!result.x.granularity) result.x.granularity = 'coarse';\n    }\n\n    if (result.y) {\n      if (!result.y.property && charts[0]) // see if we have a point chart that has an x property\n        result.y.property = charts[0].property.y || charts[0].property;\n      if (!result.y.granularity) result.y.granularity = 'coarse';\n    } // calculate number of entries based on granularity\n\n\n    if (result.x) {\n      var _result$x$granularity = result.x.granularity,\n          granularity = _result$x$granularity === void 0 ? 'coarse' : _result$x$granularity;\n      result.x.count = granularities.x[granularity];\n    }\n\n    if (result.y) {\n      var _result$y$granularity = result.y.granularity,\n          _granularity = _result$y$granularity === void 0 ? 'coarse' : _result$y$granularity;\n\n      result.y.count = granularities.y[_granularity];\n    }\n\n    return result;\n  }, [axisProp, data, charts, granularities]); // calculate axis, bounds, and thickness for each chart\n\n  var chartProps = useMemo(function () {\n    var steps = [];\n    var coarseness = [undefined, 5];\n\n    if (axis && axis.x) {\n      var _axis$x$granularity = axis.x.granularity,\n          granularity = _axis$x$granularity === void 0 ? 'coarse' : _axis$x$granularity;\n      steps[0] = granularities.x[granularity] - 1;\n    } else steps[0] = data.length - 1;\n\n    if (axis && axis.y) {\n      var _axis$y$granularity = axis.y.granularity,\n          _granularity2 = _axis$y$granularity === void 0 ? 'coarse' : _axis$y$granularity;\n\n      steps[1] = granularities.y[_granularity2] - 1;\n    } else steps[1] = 1;\n\n    var chartBounds = chartValues.map(function (_, index) {\n      var type = charts[index].type;\n\n      if (stackedChartType[type]) {\n        var _chartValues$index, _chartValues$index$;\n\n        // merge values for bars, areas, and lines cases\n        var mergedValues = ((_chartValues$index = chartValues[index]) == null ? void 0 : (_chartValues$index$ = _chartValues$index[0]) == null ? void 0 : _chartValues$index$.slice(0)) || [];\n        chartValues[index].slice(1) // skip first index as that is the x value\n        .filter(function (values) {\n          return values;\n        }) // property name isn't valid\n        .forEach(function (values) {\n          mergedValues = mergedValues.map(function (__, i) {\n            return type === 'lines' ? [i, Math.min(mergedValues[i][1], values[i][1]), Math.max(mergedValues[i][1], values[i][1])] : [i, Math.min(mergedValues[i][1], values[i][1]), Math.max(mergedValues[i][2], values[i][2])];\n          });\n        });\n        return calcBounds(mergedValues, {\n          coarseness: coarseness,\n          steps: steps\n        });\n      } // if this is a data driven x chart, set coarseness for x\n\n\n      return calcBounds(chartValues[index], {\n        coarseness: charts[index].property.x ? [5, 5] : coarseness,\n        steps: steps\n      });\n    });\n\n    if (boundsProp === 'align' && chartBounds.length) {\n      var alignedBounds = [].concat(chartBounds[0]);\n      chartBounds.forEach(function (bounds) {\n        alignedBounds[0][0] = Math.min(alignedBounds[0][0], bounds[0][0]);\n        alignedBounds[0][1] = Math.max(alignedBounds[0][1], bounds[0][1]);\n        alignedBounds[1][0] = Math.min(alignedBounds[1][0], bounds[1][0]);\n        alignedBounds[1][1] = Math.max(alignedBounds[1][1], bounds[1][1]);\n      });\n      chartBounds = chartBounds.map(function () {\n        return alignedBounds;\n      });\n    }\n\n    if (typeof boundsProp === 'object') {\n      if (boundsProp.y) chartBounds = chartBounds.map(function (b) {\n        return [b[0], [].concat(boundsProp.y)];\n      });\n    }\n\n    return chartValues.map(function (values, index) {\n      var _charts$index = charts[index],\n          thickness = _charts$index.thickness,\n          type = _charts$index.type;\n      var calcValues = stackedChartType[type] ? values[0] : values;\n      return calcs(calcValues, {\n        bounds: chartBounds[index],\n        steps: steps,\n        thickness: thickness\n      });\n    });\n  }, [axis, boundsProp, charts, chartValues, data, granularities]); // normalize how we style data properties for use by Legend and Detail\n\n  var seriesStyles = useMemo(function () {\n    var result = {}; // start from what we were explicitly given\n\n    charts.forEach(function (_ref6, index) {\n      var color = _ref6.color,\n          point = _ref6.point,\n          property = _ref6.property,\n          thickness = _ref6.thickness,\n          type = _ref6.type;\n      var calcThickness = chartProps[index].thickness;\n\n      if (typeof property === 'object' && !Array.isArray(property)) {\n        // data driven point chart\n        Object.keys(property).forEach(function (aspect) {\n          var prop = property[aspect];\n          if (!result[prop.property || prop]) result[prop.property || prop] = {\n            aspect: aspect\n          };\n        });\n      } else {\n        var props = Array.isArray(property) ? property : [property];\n        props.forEach(function (prop) {\n          var p = prop.property || prop;\n          var pColor = prop.color || color;\n          if (!result[p]) result[p] = {};\n          if (pColor && !result[p].color) result[p].color = pColor;\n          if (point && !result[p].point) result[p].point = point;else if (type === 'point') result[p].point = false;\n          if ((thickness || calcThickness) && !result[p].thickness) result[p].thickness = thickness || calcThickness;\n        });\n      }\n    }); // set color for any non-aspect properties we don't have one for yet\n\n    var colorIndex = 0;\n    var pointIndex = 0;\n    Object.keys(result).forEach(function (key) {\n      var seriesStyle = result[key];\n\n      if (!seriesStyle.aspect && !seriesStyle.color) {\n        seriesStyle.color = \"graph-\" + colorIndex;\n        colorIndex += 1;\n      } // set opacity if it isn't set and this isn't the active property\n\n\n      if (activeProperty !== undefined && activeProperty !== key) {\n        seriesStyle.opacity = 'medium';\n      }\n\n      if (seriesStyle.point === false) {\n        seriesStyle.point = points[pointIndex];\n        pointIndex += 1;\n      }\n    });\n    return result;\n  }, [activeProperty, charts, chartProps]); // normalize guide\n\n  var guide = useMemo(function () {\n    if (!guideProp) return undefined;\n    var result;\n\n    if (guideProp === true) {\n      result = {\n        x: {},\n        y: {}\n      };\n    } else {\n      result = {};\n      if (guideProp.x) result.x = _extends({}, guideProp.x);\n      if (guideProp.y) result.y = _extends({}, guideProp.y);\n    } // set counts\n\n\n    if (result.x) {\n      // if no granularity and axis, align count with axis\n      if (!result.x.granularity && axis && axis.x) result.x.count = axis.x.count;\n      if (!result.x.count) result.x.count = granularities.x[result.x.granularity || 'coarse'];\n    }\n\n    if (result.y) {\n      // if no granularity and axis, align count with axis\n      if (!result.y.granularity && axis && axis.y) result.y.count = axis.y.count;\n      if (!result.y.count) result.y.count = granularities.y[result.y.granularity || 'coarse'];\n    }\n\n    return result;\n  }, [axis, granularities, guideProp]); // set the pad to half the thickness, based on the chart types\n  // except when using offset, then add even more horizontal pad\n\n  var pad = useMemo(function () {\n    if (padProp !== undefined) return padProp;\n    var result = {};\n    charts.forEach(function (_ref7, index) {\n      var type = _ref7.type;\n      var thickness = chartProps[index].thickness;\n      result.horizontal = halfPad[thickness];\n      if (type && type !== 'bar') result.vertical = halfPad[thickness];\n    });\n    return result;\n  }, [chartProps, charts, padProp]); // calculate the thickness in pixels of each chart\n\n  var thicknesses = useMemo(function () {\n    return offset ? charts.map(function (_, index) {\n      var thickness = chartProps[index].thickness;\n      return parseMetricToNum(theme.global.edgeSize[thickness] || thickness);\n    }) : undefined;\n  }, [charts, chartProps, offset, theme]); // normalize any offset gap\n\n  var offsetGap = useMemo(function () {\n    return (offset == null ? void 0 : offset.gap) && parseMetricToNum(theme.global.edgeSize[offset.gap] || offset.gap) || 0;\n  }, [offset, theme]); // calculate the offset for each chart, which is a sum of the thicknesses\n  // any offset gaps that preceded it\n\n  var offsets = useMemo(function () {\n    if (offset) {\n      return thicknesses.map(function (t, i) {\n        return thicknesses.slice(0, i).reduce(function (a, b) {\n          return a + b + offsetGap;\n        }, 0);\n      });\n    }\n\n    return undefined;\n  }, [offset, offsetGap, thicknesses]); // Calculate the total pad we should add to the end of each chart.\n  // We do this to shrink the width of each chart so we can shift them\n  // via `translate` and have them take up the right amount of width.\n\n  var offsetPad = useMemo(function () {\n    return offsets ? offsets[offsets.length - 1] + thicknesses[thicknesses.length - 1] + \"px\" : undefined;\n  }, [offsets, thicknesses]); // The thickness of the Detail segments. We need to convert to numbers\n  // to be able to compare across charts where some might be using T-shirt\n  // labels and others might be pixel values.\n\n  var detailThickness = useMemo(function () {\n    var result = 0;\n\n    if (detail) {\n      charts.forEach(function (_, index) {\n        var thickness = chartProps[index].thickness;\n        result = Math.max(result, parseMetricToNum(theme.global.edgeSize[thickness] || thickness));\n      });\n    }\n\n    return result + \"px\";\n  }, [charts, chartProps, detail, theme]);\n  var dateFormats = useMemo(function () {\n    var result = {};\n    var full = axis && axis.x && axis.x.granularity === 'coarse';\n    series.forEach(function (_ref8) {\n      var property = _ref8.property,\n          render = _ref8.render;\n\n      if (!render && data.length > 1 && typeof data[0][property] === 'string') {\n        result[property] = createDateFormat(data[0][property], data[data.length - 1][property], full);\n      }\n    });\n    return result;\n  }, [axis, data, series]); // for ie11, align the spacer Box height to the x-axis height\n\n  useLayoutEffect(function () {\n    if (xRef.current && spacerRef.current) {\n      var rect = xRef.current.getBoundingClientRect();\n      spacerRef.current.style.height = rect.height + \"px\";\n    }\n  }, []);\n\n  var renderValue = function renderValue(serie, dataIndex, valueArg) {\n    var value;\n\n    if (valueArg !== undefined) {\n      if (serie && serie.render) return serie.render(valueArg);\n      value = valueArg;\n    } else {\n      var datum = data[dataIndex];\n      value = datum[serie.property];\n      if (serie && serie.render) return serie.render(value, datum, serie.property);\n    }\n\n    if (serie) {\n      var dateFormat = dateFormats[serie.property];\n      if (dateFormat) return dateFormat(new Date(value));\n      if (serie.prefix) value = \"\" + serie.prefix + value;\n      if (serie.suffix) value = \"\" + value + serie.suffix;\n    }\n\n    return value;\n  }; // TODO: revisit how x/y axis are hooked up to charts and series\n\n\n  var xAxisElement = axis && axis.x && chartProps.length ? /*#__PURE__*/React.createElement(XAxis, {\n    ref: xRef,\n    axis: axis,\n    values: (Array.isArray(chartProps[0]) ? chartProps[0][0] : chartProps[0]).axis[0],\n    pad: offsetPad ? _extends({}, pad, {\n      end: offsetPad\n    }) : pad,\n    renderValue: renderValue,\n    serie: axis.x.property && getPropertySeries(axis.x.property),\n    style: offsetPad ? {\n      transform: \"translate(\" + offsets[Math.floor(offsets.length / 2)] + \"px, 0px)\"\n    } : {}\n  }) : null;\n  var yAxisElement = axis && axis.y && (chartProps.length || boundsProp != null && boundsProp.y) ? /*#__PURE__*/React.createElement(YAxis, {\n    axis: axis,\n    values: (boundsProp == null ? void 0 : (_boundsProp$y = boundsProp.y) == null ? void 0 : _boundsProp$y.slice(0).reverse()) || (Array.isArray(chartProps[0]) ? chartProps[0][0] : chartProps[0]).axis[1],\n    pad: pad,\n    renderValue: renderValue,\n    serie: axis.y.property && getPropertySeries(axis.y.property)\n  }) : null;\n  var stackFill = useMemo(function () {\n    if (size === 'fill' || size && size.width === 'fill' && size.height === 'fill') return true;\n    if (size && size.width === 'fill') return 'horizontal';\n    if (size && size.height === 'fill') return 'vertical';\n    return undefined;\n  }, [size]);\n  var guidingChild = useMemo(function () {\n    var result = 0;\n    if (guide && guide.x) result += 1;\n    if (guide && guide.y) result += 1;\n    return result;\n  }, [guide]);\n  var stackElement = /*#__PURE__*/React.createElement(Stack, {\n    gridArea: \"charts\",\n    guidingChild: guidingChild,\n    fill: stackFill\n  }, guide && guide.x && /*#__PURE__*/React.createElement(XGuide, {\n    guide: guide,\n    pad: pad\n  }), guide && guide.y && /*#__PURE__*/React.createElement(YGuide, {\n    guide: guide,\n    pad: pad\n  }), charts.map(function (_ref9, i) {\n    var prop = _ref9.property,\n        type = _ref9.type,\n        x = _ref9.x,\n        y = _ref9.y,\n        chartRest = _objectWithoutPropertiesLoose(_ref9, _excluded2);\n\n    // When we offset, we increase the padding on the end for all charts\n    // by the same amount and we shift each successive chart to the\n    // right by an offset for that chart. The last chart's right side\n    // will end up aligning with where the charts would have been\n    // had we not padded their ends.\n    var chartPad = offsetPad ? _extends({}, pad, {\n      end: offsetPad\n    }) : pad;\n    var offsetProps = offsetPad ? {\n      style: {\n        transform: \"translate(\" + offsets[i] + \"px, 0px)\"\n      }\n    } : {};\n\n    if (stackedChartType[type]) {\n      // reverse to ensure area Charts are stacked in the right order\n      return prop.map(function (cProp, j) {\n        var pProp = cProp.property || cProp;\n\n        var _ref10 = typeof cProp === 'object' ? cProp : {},\n            property = _ref10.property,\n            propRest = _objectWithoutPropertiesLoose(_ref10, _excluded3);\n\n        return /*#__PURE__*/React.createElement(Chart // eslint-disable-next-line react/no-array-index-key\n        , _extends({\n          key: j // when property name isn't valid, send empty array\n          ,\n          values: chartValues[i][j] || [],\n          overflow: true\n        }, seriesStyles[pProp], chartProps[i], chartRest, propRest, offsetProps, {\n          type: stackedChartType[type] || type,\n          size: size,\n          pad: chartPad\n        }));\n      }).reverse();\n    }\n\n    return /*#__PURE__*/React.createElement(Chart // eslint-disable-next-line react/no-array-index-key\n    , _extends({\n      key: i,\n      values: chartValues[i],\n      overflow: true\n    }, seriesStyles[prop], chartProps[i], chartRest, offsetProps, {\n      type: type,\n      size: size,\n      pad: chartPad\n    }));\n  }), placeholder && (typeof placeholder === 'string' && /*#__PURE__*/React.createElement(Box, {\n    fill: \"vertical\",\n    align: \"center\",\n    justify: \"center\",\n    background: {\n      color: 'background-front',\n      opacity: 'strong'\n    },\n    margin: pad\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text-weak\"\n  }, placeholder)) || placeholder), detail && /*#__PURE__*/React.createElement(Detail, {\n    activeProperty: activeProperty,\n    axis: axis,\n    data: data,\n    pad: pad,\n    series: series,\n    seriesStyles: seriesStyles,\n    renderValue: renderValue,\n    thickness: detailThickness\n  }));\n  var legendElement = legend ? /*#__PURE__*/React.createElement(Legend, {\n    series: series,\n    seriesStyles: seriesStyles,\n    activeProperty: activeProperty,\n    setActiveProperty: setActiveProperty\n  }) : null; // IE11\n\n  if (!Grid.available) {\n    var _content = stackElement;\n\n    if (xAxisElement) {\n      _content = /*#__PURE__*/React.createElement(Box, null, _content, xAxisElement);\n    }\n\n    if (yAxisElement) {\n      _content = /*#__PURE__*/React.createElement(Box, {\n        direction: \"row\"\n      }, /*#__PURE__*/React.createElement(Box, null, yAxisElement, /*#__PURE__*/React.createElement(Box, {\n        ref: spacerRef,\n        flex: false\n      })), _content);\n    }\n\n    if (legendElement) {\n      _content = /*#__PURE__*/React.createElement(Box, null, _content, legendElement);\n    }\n\n    return _content;\n  }\n\n  var content = /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    \"aria-label\": a11yTitle,\n    fill: stackFill,\n    columns: ['auto', stackFill === true || stackFill === 'horizontal' ? 'flex' : 'auto'],\n    rows: [stackFill === true || stackFill === 'vertical' ? 'flex' : 'auto', 'auto'],\n    areas: [{\n      name: 'yAxis',\n      start: [0, 0],\n      end: [0, 0]\n    }, {\n      name: 'xAxis',\n      start: [1, 1],\n      end: [1, 1]\n    }, {\n      name: 'charts',\n      start: [1, 0],\n      end: [1, 0]\n    }],\n    gap: gap\n  }, rest), xAxisElement, yAxisElement, stackElement);\n\n  if (legendElement) {\n    content = /*#__PURE__*/React.createElement(Box, {\n      align: \"start\"\n    }, content, legendElement);\n  }\n\n  return content;\n});\nDataChart.displayName = 'DataChart';\nDataChart.propTypes = DataChartPropTypes;\nexport { DataChart };"],"mappings":"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"},"metadata":{},"sourceType":"module"}